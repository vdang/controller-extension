<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="R}wBLK#l*a`0B4+N?o|." x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="~/=HqiV`({Hu`d4bQ2@}" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace controller {" line1="    //% block" line2="    export function isLeftJoystickClicked() {" line3="        return pins.digitalReadPin(DigitalPin.P8) == 0" line4="    }" line5="    function leftJoystickX () {" line6="        return Math.round(pins.map(" line7="        pins.analogReadPin(AnalogPin.P1)," line8="        0," line9="        1023," line10="        0," line11="        4" line12="        )) - 2" line13="    }" line14="    //% block" line15="    export function isLeftJoystickMovedLeft() {" line16="        return leftJoystickX() &lt; 0" line17="    }" line18="    //% block" line19="    export function isLeftJoystickMovedRight() {" line20="        return leftJoystickX() &gt; 0" line21="    }" line22="    function leftJoystickY() {" line23="        return Math.round(pins.map(" line24="        pins.analogReadPin(AnalogPin.P0)," line25="        0," line26="        1023," line27="        0," line28="        4" line29="        )) - 2" line30="    }" line31="    //% block" line32="    export function isLeftJoystickMovedDown() {" line33="        return leftJoystickY() &lt; 0" line34="    }" line35="    //% block" line36="    export function isLeftJoystickMovedUp() {" line37="        return leftJoystickY() &gt; 0" line38="    }" line39="    //% block" line40="    export function isRightJoystickClicked() {" line41="        return pins.digitalReadPin(DigitalPin.P9) == 0" line42="    }" line43="    function rightJoystickX () {" line44="        return Math.round(pins.map(" line45="        pins.analogReadPin(AnalogPin.P3)," line46="        0," line47="        1023," line48="        0," line49="        4" line50="        )) - 2" line51="    }" line52="    //% block" line53="    export function isRightJoystickMovedLeft() {" line54="        return rightJoystickX() &lt; 0" line55="    }" line56="    //% block" line57="    export function isRightJoystickMovedRight() {" line58="        return rightJoystickX() &gt; 0" line59="    }" line60="    function rightJoystickY () {" line61="        return Math.round(pins.map(" line62="        pins.analogReadPin(AnalogPin.P2)," line63="        0," line64="        1023," line65="        0," line66="        4" line67="        )) - 2" line68="    }" line69="    //% block" line70="    export function isRightJoystickMovedDown() {" line71="        return rightJoystickY() &lt; 0" line72="    }" line73="    //% block" line74="    export function isRightJoystickMovedUp() {" line75="        return rightJoystickY() &gt; 0" line76="    }" line77="    pins.setPull(DigitalPin.P8, PinPullMode.PullUp)" line78="    pins.setPull(DigitalPin.P9, PinPullMode.PullUp)" line79="    led.enable(false)" line80="}" numlines="81"></mutation></block></statement></block></xml>